{"ast":null,"code":"/**\n * React Router DOM v6.17.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, matchPath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\n\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n} // One-time check for submitter support\n\n\nlet _formDataSupportsSubmitter = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"), // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n\n  return _formDataSupportsSubmitter;\n}\n\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\n\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n\n  return encType;\n}\n\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n\n\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType; // Build a FormData object populated from a form and submitter\n\n    formData = new FormData(form, target); // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  } // Send body for <Form encType=\"text/plain\" so we encode it into text\n\n\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n      _excluded3 = [\"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\n\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\n\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\n\nfunction parseHydrationData() {\n  var _window;\n\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n\n  return state;\n}\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {// no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\n\n\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\n\n\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n\n    if (!viewTransitionOpts || router.window == null || typeof router.window.document.startViewTransition !== \"function\") {\n      // Mid-navigation state update, or startViewTransition isn't available\n      optInStartTransition(() => setStateImpl(newState));\n    } else if (transition && renderDfd) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [optInStartTransition, transition, renderDfd, router.window]); // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]); // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext.isTransitioning]); // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]); // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]); // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]); // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement)))), null);\n}\n\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\n\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\n\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset,\n    unstable_viewTransition\n  } = _ref7,\n      rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext); // Rendered into <a href> for absolute URLs\n\n  let absoluteHref;\n  let isExternal = false;\n\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to; // Only check for external origins client-side\n\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  } // Rendered into <a href> for relative URLs\n\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    unstable_viewTransition,\n    children\n  } = _ref8,\n      rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  let submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n    reloadDocument,\n    replace,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    submit,\n    relative,\n    preventScrollReset,\n    unstable_viewTransition\n  } = _ref9,\n      props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() => // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\n\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      state: options.state,\n      fromRouteId: currentRouteId,\n      unstable_viewTransition: options.unstable_viewTransition\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\n * Returns the implementation for fetcher.submit\n */\n\n\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n} // v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\n\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1); // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    let submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nlet fetcherId = 0; // TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\n\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n\n\nfunction usePrompt(_ref11) {\n  let {\n    when,\n    message\n  } = _ref11;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\n\n\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname; // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n} //#endregion\n\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"mappings":"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","names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","target","button","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","locationSearch","defaultSearchParams","searchParams","createSearchParams","forEach","_","has","getAll","append","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","e","supportedFormEncTypes","Set","getFormEncType","encType","process","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","routes","opts","createRouter","future","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","mapRouteProperties","initialize","createHashHistory","state","_window","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","ErrorResponseImpl","status","statusText","data","internal","__subType","ErrorConstructor","error","message","stack","ViewTransitionContext","React","createContext","isTransitioning","displayName","START_TRANSITION","startTransitionImpl","startTransitionSafe","cb","Deferred","constructor","promise","Promise","resolve","reject","reason","RouterProvider","_ref","fallbackElement","router","setStateImpl","useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","v7_startTransition","optInStartTransition","useCallback","setState","newState","_ref2","unstable_viewTransitionOpts","viewTransitionOpts","startViewTransition","skipTransition","currentLocation","nextLocation","useLayoutEffect","subscribe","useEffect","renderPromise","finished","finally","location","navigator","useMemo","createHref","encodeLocation","go","n","navigate","push","to","preventScrollReset","replace","dataRouterContext","static","DataRouterContext","Provider","DataRouterStateContext","Router","navigationType","historyAction","initialized","DataRoutes","_ref3","useRoutesImpl","BrowserRouter","_ref4","children","historyRef","useRef","current","v5Compat","listen","HashRouter","_ref5","HistoryRouter","_ref6","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","_ref7","ref","onClick","relative","reloadDocument","unstable_viewTransition","rest","useContext","NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","_ref8","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","useResolvedPath","useLocation","routerState","useViewTransitionState","toPathname","locationPathname","nextLocationPathname","navigation","isActive","charAt","length","isPending","renderProps","ariaCurrent","filter","Boolean","join","_extends","Form","props","submit","useSubmit","FormImpl","forwardedRef","onSubmit","_ref9","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref10","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","invariant","useDataRouterState","_temp","replaceProp","useNavigate","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","UseSubmit","currentRouteId","useRouteId","options","getFormSubmissionInfo","formEncType","fromRouteId","useSubmitFetcher","fetcherKey","fetcherRouteId","UseSubmitFetcher","fetch","_temp2","routeContext","RouteContext","match","matches","slice","route","index","params","delete","toString","joinPaths","createFetcherForm","routeId","FetcherForm","fetcherId","useFetcher","UseFetcher","_route$matches","id","String","load","fetcher","getFetcher","fetcherWithComponents","console","warn","deleteFetcher","useFetchers","UseFetchers","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp3","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","decodeURIComponent","scrollIntoView","callback","capture","addEventListener","removeEventListener","usePrompt","_ref11","when","blocker","useBlocker","proceed","confirm","setTimeout","reset","currentPath","nextPath","matchPath"],"sources":["D:\\Tantárgyak\\5. félév\\Project_Lab\\react-express-mysql-master\\react-client\\node_modules\\react-router-dom\\dom.ts","D:\\Tantárgyak\\5. félév\\Project_Lab\\react-express-mysql-master\\react-client\\node_modules\\react-router-dom\\index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProviderProps,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      { unstable_viewTransitionOpts: viewTransitionOpts }\n    ) => {\n      if (\n        !viewTransitionOpts ||\n        router.window == null ||\n        typeof router.window.document.startViewTransition !== \"function\"\n      ) {\n        // Mid-navigation state update, or startViewTransition isn't available\n        optInStartTransition(() => setStateImpl(newState));\n      } else if (transition && renderDfd) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [optInStartTransition, transition, renderDfd, router.window]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext.isTransitioning]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <ViewTransitionContext.Provider value={vtContext}>\n            <Router\n              basename={basename}\n              location={state.location}\n              navigationType={state.historyAction}\n              navigator={navigator}\n            >\n              {state.initialized ? (\n                <DataRoutes routes={router.routes} state={state} />\n              ) : (\n                fallbackElement\n              )}\n            </Router>\n          </ViewTransitionContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\ntype NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_viewTransition: options.unstable_viewTransition,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n"]},"metadata":{},"sourceType":"module"}